<?php
/*
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
*/

$found = false;
$pents = array();
while(!$found){
  for($i = 1; $i < count($pents) - 1; $i++){
    // use quadratic formula to test if sum/difference is pentagonal, faster than in_array, can also check sums > max(pents)
    // we only need to compare every element against the latest element
    $last = end($pents);
    $u = $last - $pents[$i];
    $w = (1 + sqrt((1 + (24 * $u)))) / 6;
    if($w == (int)$w){
      $x = $pents[$i] + $last;
      $y = (1 + sqrt((1 + (24 * $x)))) / 6;
      if($y == (int)$y){
        echo "{$i} : {$pents[$i]} | ".count($pents)." : {$last}\n";
        $found = true;
      }
    }
  }
  $pents[] = count($pents) * (3*count($pents) - 1) / 2;
  // visual progress of what n is
  echo count($pents) . "\r";
}
